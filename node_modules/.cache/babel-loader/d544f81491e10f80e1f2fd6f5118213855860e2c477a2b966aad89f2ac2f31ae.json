{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"D:/portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { useAlertContext, useAlertStyles } from \"./chunk-XCES3W5V.mjs\";\n\n// src/alert-description.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AlertDescription = forwardRef(function AlertDescription2(props, ref) {\n  var styles = useAlertStyles();\n  var _useAlertContext = useAlertContext(),\n    status = _useAlertContext.status;\n  var descriptionStyles = _objectSpread({\n    display: \"inline\"\n  }, styles.description);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n    ref: ref,\n    \"data-status\": status\n  }, props), {}, {\n    className: cx(\"chakra-alert__desc\", props.className),\n    __css: descriptionStyles\n  }));\n});\nAlertDescription.displayName = \"AlertDescription\";\nexport { AlertDescription };","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,UAAU;AACnB,SAGEC,QACAC,kBACK;AAeD;AAVC,IAAMC,mBAAmBD,WAC9B,SAASC,kBAAiBC,OAAOC,KAAK;EACpC,IAAMC,SAASC,gBAAe;EAC9B,uBAAmBC,iBAAgB;IAA3BC;EACR,IAAMC;IACJC,SAAS;EAAA,GACNL,OAAOM,YACZ;EAEA,OACE,mBAACX,OAAOY;IACNR;IACA,eAAaI;EAAA,GACTL;IACJU,WAAWd,GAAG,sBAAsBI,MAAMU,SAAS;IACnDC,OAAOL;EAAA,GACT;AAEJ,EACF;AAEAP,iBAAiBa,cAAc","names":["cx","chakra","forwardRef","AlertDescription","props","ref","styles","useAlertStyles","useAlertContext","status","descriptionStyles","display","description","div","className","__css","displayName"],"sources":["D:\\portfolio\\node_modules\\@chakra-ui\\alert\\src\\alert-description.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { useAlertContext, useAlertStyles } from \"./alert-context\"\n\nexport interface AlertDescriptionProps extends HTMLChakraProps<\"div\"> {}\n\nexport const AlertDescription = forwardRef<AlertDescriptionProps, \"div\">(\n  function AlertDescription(props, ref) {\n    const styles = useAlertStyles()\n    const { status } = useAlertContext()\n    const descriptionStyles: SystemStyleObject = {\n      display: \"inline\",\n      ...styles.description,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        data-status={status}\n        {...props}\n        className={cx(\"chakra-alert__desc\", props.className)}\n        __css={descriptionStyles}\n      />\n    )\n  },\n)\n\nAlertDescription.displayName = \"AlertDescription\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}