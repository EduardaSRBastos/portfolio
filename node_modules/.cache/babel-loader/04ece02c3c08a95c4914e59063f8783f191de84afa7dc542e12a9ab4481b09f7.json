{"ast":null,"code":"import _objectSpread from \"D:/portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar getDocument = function getDocument(node) {\n  var _node$ownerDocument;\n  if (node.nodeType === Node.DOCUMENT_NODE) return node;\n  return (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 ? _node$ownerDocument : document;\n};\nfunction createScope(methods) {\n  var screen = {\n    getRootNode: function getRootNode(ctx) {\n      var _ctx$getRootNode, _ctx$getRootNode2;\n      return (_ctx$getRootNode = (_ctx$getRootNode2 = ctx.getRootNode) === null || _ctx$getRootNode2 === void 0 ? void 0 : _ctx$getRootNode2.call(ctx)) !== null && _ctx$getRootNode !== void 0 ? _ctx$getRootNode : document;\n    },\n    getDoc: function getDoc(ctx) {\n      return getDocument(screen.getRootNode(ctx));\n    },\n    getWin: function getWin(ctx) {\n      var _screen$getDoc$defaul;\n      return (_screen$getDoc$defaul = screen.getDoc(ctx).defaultView) !== null && _screen$getDoc$defaul !== void 0 ? _screen$getDoc$defaul : window;\n    },\n    getActiveElement: function getActiveElement(ctx) {\n      return screen.getDoc(ctx).activeElement;\n    },\n    getById: function getById(ctx, id) {\n      return screen.getRootNode(ctx).getElementById(id);\n    },\n    queryById: function queryById(ctx, id) {\n      var el = screen.getById(ctx, id);\n      if (!el) throw new Error(\"Element with id \\\"\".concat(id, \"\\\" not found.\"));\n      return el;\n    }\n  };\n  return _objectSpread(_objectSpread({}, screen), methods);\n}\nexport { createScope };","map":{"version":3,"names":["getDocument","node","nodeType","Node","DOCUMENT_NODE","ownerDocument","document","createScope","methods","screen","getRootNode","ctx","getDoc","getWin","defaultView","window","getActiveElement","activeElement","getById","id","getElementById","queryById","el","Error"],"sources":["D:/portfolio/node_modules/@zag-js/dom-query/dist/create-scope.mjs"],"sourcesContent":["const getDocument = (node) => {\n  if (node.nodeType === Node.DOCUMENT_NODE)\n    return node;\n  return node.ownerDocument ?? document;\n};\nfunction createScope(methods) {\n  const screen = {\n    getRootNode: (ctx) => ctx.getRootNode?.() ?? document,\n    getDoc: (ctx) => getDocument(screen.getRootNode(ctx)),\n    getWin: (ctx) => screen.getDoc(ctx).defaultView ?? window,\n    getActiveElement: (ctx) => screen.getDoc(ctx).activeElement,\n    getById: (ctx, id) => screen.getRootNode(ctx).getElementById(id),\n    queryById: (ctx, id) => {\n      const el = screen.getById(ctx, id);\n      if (!el)\n        throw new Error(`Element with id \"${id}\" not found.`);\n      return el;\n    }\n  };\n  return { ...screen, ...methods };\n}\n\nexport { createScope };\n"],"mappings":";AAAA,IAAMA,WAAW,GAAG,SAAdA,WAAW,CAAIC,IAAI,EAAK;EAAA;EAC5B,IAAIA,IAAI,CAACC,QAAQ,KAAKC,IAAI,CAACC,aAAa,EACtC,OAAOH,IAAI;EACb,8BAAOA,IAAI,CAACI,aAAa,qEAAIC,QAAQ;AACvC,CAAC;AACD,SAASC,WAAW,CAACC,OAAO,EAAE;EAC5B,IAAMC,MAAM,GAAG;IACbC,WAAW,EAAE,qBAACC,GAAG;MAAA;MAAA,gDAAKA,GAAG,CAACD,WAAW,sDAAf,uBAAAC,GAAG,CAAgB,+DAAIL,QAAQ;IAAA;IACrDM,MAAM,EAAE,gBAACD,GAAG;MAAA,OAAKX,WAAW,CAACS,MAAM,CAACC,WAAW,CAACC,GAAG,CAAC,CAAC;IAAA;IACrDE,MAAM,EAAE,gBAACF,GAAG;MAAA;MAAA,gCAAKF,MAAM,CAACG,MAAM,CAACD,GAAG,CAAC,CAACG,WAAW,yEAAIC,MAAM;IAAA;IACzDC,gBAAgB,EAAE,0BAACL,GAAG;MAAA,OAAKF,MAAM,CAACG,MAAM,CAACD,GAAG,CAAC,CAACM,aAAa;IAAA;IAC3DC,OAAO,EAAE,iBAACP,GAAG,EAAEQ,EAAE;MAAA,OAAKV,MAAM,CAACC,WAAW,CAACC,GAAG,CAAC,CAACS,cAAc,CAACD,EAAE,CAAC;IAAA;IAChEE,SAAS,EAAE,mBAACV,GAAG,EAAEQ,EAAE,EAAK;MACtB,IAAMG,EAAE,GAAGb,MAAM,CAACS,OAAO,CAACP,GAAG,EAAEQ,EAAE,CAAC;MAClC,IAAI,CAACG,EAAE,EACL,MAAM,IAAIC,KAAK,6BAAqBJ,EAAE,mBAAe;MACvD,OAAOG,EAAE;IACX;EACF,CAAC;EACD,uCAAYb,MAAM,GAAKD,OAAO;AAChC;AAEA,SAASD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}