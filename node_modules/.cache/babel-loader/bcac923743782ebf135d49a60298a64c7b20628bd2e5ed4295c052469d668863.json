{"ast":null,"code":"'use client';\n\n// src/indicator.tsx\nimport _objectSpread from \"D:/portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"D:/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"D:/portfolio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"offsetX\", \"offsetY\", \"offset\", \"placement\"];\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Indicator = forwardRef(function Indicator2(props, ref) {\n  var offsetX = props.offsetX,\n    offsetY = props.offsetY,\n    _props$offset = props.offset,\n    offset = _props$offset === void 0 ? \"0\" : _props$offset,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? \"top-end\" : _props$placement,\n    rest = _objectWithoutProperties(props, _excluded);\n  var styles = useMemo(function () {\n    return {\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      position: \"absolute\",\n      insetBlockStart: mapResponsive(placement, function (v) {\n        var _v$split = v.split(\"-\"),\n          _v$split2 = _slicedToArray(_v$split, 1),\n          side = _v$split2[0];\n        var map = {\n          top: offsetY != null ? offsetY : offset,\n          middle: \"50%\",\n          bottom: \"auto\"\n        };\n        return map[side];\n      }),\n      insetBlockEnd: mapResponsive(placement, function (v) {\n        var _v$split3 = v.split(\"-\"),\n          _v$split4 = _slicedToArray(_v$split3, 1),\n          side = _v$split4[0];\n        var map = {\n          top: \"auto\",\n          middle: \"50%\",\n          bottom: offsetY != null ? offsetY : offset\n        };\n        return map[side];\n      }),\n      insetStart: mapResponsive(placement, function (v) {\n        var _v$split5 = v.split(\"-\"),\n          _v$split6 = _slicedToArray(_v$split5, 2),\n          align = _v$split6[1];\n        var map = {\n          start: offsetX != null ? offsetX : offset,\n          center: \"50%\",\n          end: \"auto\"\n        };\n        return map[align];\n      }),\n      insetEnd: mapResponsive(placement, function (v) {\n        var _v$split7 = v.split(\"-\"),\n          _v$split8 = _slicedToArray(_v$split7, 2),\n          align = _v$split8[1];\n        var map = {\n          start: \"auto\",\n          center: \"50%\",\n          end: offsetX != null ? offsetX : offset\n        };\n        return map[align];\n      }),\n      translate: mapResponsive(placement, function (v) {\n        var _v$split9 = v.split(\"-\"),\n          _v$split10 = _slicedToArray(_v$split9, 2),\n          side = _v$split10[0],\n          align = _v$split10[1];\n        var mapX = {\n          start: \"-50%\",\n          center: \"-50%\",\n          end: \"50%\"\n        };\n        var mapY = {\n          top: \"-50%\",\n          middle: \"-50%\",\n          bottom: \"50%\"\n        };\n        return \"\".concat(mapX[align], \" \").concat(mapY[side]);\n      })\n    };\n  }, [offset, offsetX, offsetY, placement]);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\nexport { Indicator };","map":{"version":3,"mappings":";;;;;;;AAAA,SAASA,qBAAqB;AAC9B,SAIEC,QACAC,kBACK;AACP,SAASC,eAAe;AAsGf;AAhEF,IAAMC,YAAYF,WAAkC,SAASE,WAClEC,OACAC,KACA;EACA,IACEC,UAKEF,MALFE;IACAC,UAIEH,MAJFG;IAAA,gBAIEH,MAHFI;IAAAA,oCAAS;IAAA,mBAGPJ,MAFFK;IAAAA,0CAAY;IACTC,gCACDN;EAEJ,IAAMO,SAA4BT,QAChC;IAAA,OAAO;MACLU,SAAS;MACTC,gBAAgB;MAChBC,YAAY;MACZC,UAAU;MACVC,iBAAiBjB,cAAcU,WAAW,UAACQ,GAAM;QAC/C,eAAeA,EAAEC,MAAM,GAAG;UAAA;UAAnBC,IAAI;QACX,IAAMC,MAAY;UAChBC,KAAKd,4BAAWC;UAChBc,QAAQ;UACRC,QAAQ;QACV;QACA,OAAOH,IAAID,IAAI;MACjB,CAAC;MACDK,eAAezB,cAAcU,WAAW,UAACQ,GAAM;QAC7C,gBAAeA,EAAEC,MAAM,GAAG;UAAA;UAAnBC,IAAI;QACX,IAAMC,MAAY;UAChBC,KAAK;UACLC,QAAQ;UACRC,QAAQhB,4BAAWC;QACrB;QACA,OAAOY,IAAID,IAAI;MACjB,CAAC;MACDM,YAAY1B,cAAcU,WAAW,UAACQ,GAAM;QAC1C,gBAAkBA,EAAEC,MAAM,GAAG;UAAA;UAApBQ,KAAK;QACd,IAAMN,MAAY;UAChBO,OAAOrB,4BAAWE;UAClBoB,QAAQ;UACRC,KAAK;QACP;QACA,OAAOT,IAAIM,KAAK;MAClB,CAAC;MACDI,UAAU/B,cAAcU,WAAW,UAACQ,GAAM;QACxC,gBAAkBA,EAAEC,MAAM,GAAG;UAAA;UAApBQ,KAAK;QACd,IAAMN,MAAY;UAChBO,OAAO;UACPC,QAAQ;UACRC,KAAKvB,4BAAWE;QAClB;QACA,OAAOY,IAAIM,KAAK;MAClB,CAAC;MACDK,WAAWhC,cAAcU,WAAW,UAACQ,GAAM;QACzC,gBAAsBA,EAAEC,MAAM,GAAG;UAAA;UAA1BC;UAAMO,KAAK;QAClB,IAAMM,OAAa;UAAEL,OAAO;UAAQC,QAAQ;UAAQC,KAAK;QAAM;QAC/D,IAAMI,OAAa;UAAEZ,KAAK;UAAQC,QAAQ;UAAQC,QAAQ;QAAM;QAChE,iBAAUS,KAAKN,KAAK,eAAKO,KAAKd,IAAI;MACpC,CAAC;IACH;EAAA,GACA,CAACX,QAAQF,SAASC,SAASE,SAAS,EACtC;EAEA,OAAO,mBAACT,OAAOkC;IAAI7B;IAAU8B,OAAOxB;EAAA,GAAYD,MAAM;AACxD,CAAC","names":["mapResponsive","chakra","forwardRef","useMemo","Indicator","props","ref","offsetX","offsetY","offset","placement","rest","styles","display","justifyContent","alignItems","position","insetBlockStart","v","split","side","map","top","middle","bottom","insetBlockEnd","insetStart","align","start","center","end","insetEnd","translate","mapX","mapY","div","__css"],"sources":["D:\\portfolio\\node_modules\\@chakra-ui\\layout\\src\\indicator.tsx"],"sourcesContent":["import { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\nimport {\n  HTMLChakraProps,\n  ResponsiveValue,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { useMemo } from \"react\"\n\ntype Dict = Record<string, any>\n\nexport interface IndicatorOptions {\n  /**\n   * The x offset of the indicator\n   */\n  offsetX?: SystemStyleObject[\"left\"]\n  /**\n   * The y offset of the indicator\n   */\n  offsetY?: SystemStyleObject[\"top\"]\n  /**\n   * The x and y offset of the indicator\n   */\n  offset?: SystemStyleObject[\"top\"]\n  /**\n   * The placement of the indicator\n   * @default \"top-end\"\n   */\n  placement?: ResponsiveValue<\n    | \"bottom-end\"\n    | \"bottom-start\"\n    | \"top-end\"\n    | \"top-start\"\n    | \"bottom-center\"\n    | \"top-center\"\n    | \"middle-center\"\n    | \"middle-end\"\n    | \"middle-start\"\n  >\n}\n\nexport interface IndicatorProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof IndicatorOptions>,\n    IndicatorOptions {}\n\nexport const Indicator = forwardRef<IndicatorProps, \"div\">(function Indicator(\n  props,\n  ref,\n) {\n  const {\n    offsetX,\n    offsetY,\n    offset = \"0\",\n    placement = \"top-end\",\n    ...rest\n  } = props\n\n  const styles: SystemStyleObject = useMemo(\n    () => ({\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      position: \"absolute\",\n      insetBlockStart: mapResponsive(placement, (v) => {\n        const [side] = v.split(\"-\")\n        const map: Dict = {\n          top: offsetY ?? offset,\n          middle: \"50%\",\n          bottom: \"auto\",\n        }\n        return map[side]\n      }),\n      insetBlockEnd: mapResponsive(placement, (v) => {\n        const [side] = v.split(\"-\")\n        const map: Dict = {\n          top: \"auto\",\n          middle: \"50%\",\n          bottom: offsetY ?? offset,\n        }\n        return map[side]\n      }),\n      insetStart: mapResponsive(placement, (v) => {\n        const [, align] = v.split(\"-\")\n        const map: Dict = {\n          start: offsetX ?? offset,\n          center: \"50%\",\n          end: \"auto\",\n        }\n        return map[align]\n      }),\n      insetEnd: mapResponsive(placement, (v) => {\n        const [, align] = v.split(\"-\")\n        const map: Dict = {\n          start: \"auto\",\n          center: \"50%\",\n          end: offsetX ?? offset,\n        }\n        return map[align]\n      }),\n      translate: mapResponsive(placement, (v) => {\n        const [side, align] = v.split(\"-\")\n        const mapX: Dict = { start: \"-50%\", center: \"-50%\", end: \"50%\" }\n        const mapY: Dict = { top: \"-50%\", middle: \"-50%\", bottom: \"50%\" }\n        return `${mapX[align]} ${mapY[side]}`\n      }),\n    }),\n    [offset, offsetX, offsetY, placement],\n  )\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}