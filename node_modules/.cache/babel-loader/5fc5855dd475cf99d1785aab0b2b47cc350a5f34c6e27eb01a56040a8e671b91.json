{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"D:/portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"D:/portfolio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"D:/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"children\", \"className\"],\n  _excluded2 = [\"htmlProps\", \"descendants\"],\n  _excluded3 = [\"isFitted\"];\nimport { TabsDescendantsProvider, TabsProvider, useTabs } from \"./chunk-O5AIOR56.mjs\";\n\n// src/tabs.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar _createContext = createContext({\n    name: \"TabsStylesContext\",\n    errorMessage: \"useTabsStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<Tabs />\\\" \"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  TabsStylesProvider = _createContext2[0],\n  useTabsStyles = _createContext2[1];\nvar Tabs = forwardRef(function Tabs2(props, ref) {\n  var styles = useMultiStyleConfig(\"Tabs\", props);\n  var _omitThemingProps = omitThemingProps(props),\n    children = _omitThemingProps.children,\n    className = _omitThemingProps.className,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n  var _useTabs = useTabs(rest),\n    htmlProps = _useTabs.htmlProps,\n    descendants = _useTabs.descendants,\n    ctx = _objectWithoutProperties(_useTabs, _excluded2);\n  var context = useMemo(function () {\n    return ctx;\n  }, [ctx]);\n  var _ = htmlProps.isFitted,\n    rootProps = _objectWithoutProperties(htmlProps, _excluded3);\n  return /* @__PURE__ */jsx(TabsDescendantsProvider, {\n    value: descendants,\n    children: /* @__PURE__ */jsx(TabsProvider, {\n      value: context,\n      children: /* @__PURE__ */jsx(TabsStylesProvider, {\n        value: styles,\n        children: /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n          className: cx(\"chakra-tabs\", className),\n          ref: ref\n        }, rootProps), {}, {\n          __css: styles.root,\n          children: children\n        }))\n      })\n    })\n  });\n});\nTabs.displayName = \"Tabs\";\nexport { useTabsStyles, Tabs };","map":{"version":3,"mappings":";;;;;;;;;;;AAAA,SAASA,qBAAqB;AAC9B,SACEC,QACAC,YACAC,kBAGAC,2BAEK;AACP,SAASC,UAAU;AACnB,SAASC,eAAe;AA0Dd;AAlDV,qBAA4CN,cAE1C;IACAO,yBAAM;IACNC;EACF,CAAC;EAAA;EALMC;EAAoBC,aAAa;AAqCjC,IAAMC,OAAOT,WAA6B,SAASS,MAAKC,OAAOC,KAAK;EACzE,IAAMC,SAASV,oBAAoB,QAAQQ,KAAK;EAChD,wBAAyCT,iBAAiBS,KAAK;IAAvDG;IAAUC;IAAcC;EAEhC,eAA2CC,QAAQD,IAAI;IAA/CE;IAAWC;IAAgBC;EACnC,IAAMC,UAAUhB,QAAQ;IAAA,OAAMe;EAAA,GAAK,CAACA,GAAG,CAAC;EAExC,IAAkBE,IAAoBJ,UAA9BK;IAAgBC,qCAAcN;EAEtC,OACE,mBAACO;IAAwBC,OAAOP;IAC9BL,6BAACa;MAAaD,OAAOL;MACnBP,6BAACN;QAAmBkB,OAAOb;QACzBC,6BAACd,OAAO4B;UACNb,WAAWX,GAAG,eAAeW,SAAS;UACtCH;QAAA,GACIY;UACJK,OAAOhB,OAAOiB;UAEbhB;QAAA;MACH,CACF;IAAA,CACF;EAAA,CACF;AAEJ,CAAC;AAEDJ,KAAKqB,cAAc","names":["createContext","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","cx","useMemo","name","errorMessage","TabsStylesProvider","useTabsStyles","Tabs","props","ref","styles","children","className","rest","useTabs","htmlProps","descendants","ctx","context","_","isFitted","rootProps","TabsDescendantsProvider","value","TabsProvider","div","__css","root","displayName"],"sources":["D:\\portfolio\\node_modules\\@chakra-ui\\tabs\\src\\tabs.tsx"],"sourcesContent":["import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport {\n  TabsDescendantsProvider,\n  TabsProvider,\n  useTabs,\n  UseTabsProps,\n} from \"./use-tabs\"\n\nconst [TabsStylesProvider, useTabsStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `TabsStylesContext`,\n  errorMessage: `useTabsStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tabs />\" `,\n})\n\nexport { useTabsStyles }\n\ninterface TabsOptions {\n  /**\n   * If `true`, tabs will stretch to width of the tablist.\n   * @default false\n   */\n  isFitted?: boolean\n  /**\n   * The alignment of the tabs\n   */\n  align?: \"start\" | \"end\" | \"center\"\n}\n\nexport interface TabsProps\n  extends UseTabsProps,\n    ThemingProps<\"Tabs\">,\n    Omit<HTMLChakraProps<\"div\">, \"onChange\">,\n    TabsOptions {\n  children: React.ReactNode\n}\n\n/**\n * Tabs\n *\n * Provides context and logic for all tabs components.\n *\n * @see Docs https://chakra-ui.com/docs/components/tabs\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/tabpanel/\n */\nexport const Tabs = forwardRef<TabsProps, \"div\">(function Tabs(props, ref) {\n  const styles = useMultiStyleConfig(\"Tabs\", props)\n  const { children, className, ...rest } = omitThemingProps(props)\n\n  const { htmlProps, descendants, ...ctx } = useTabs(rest)\n  const context = useMemo(() => ctx, [ctx])\n\n  const { isFitted: _, ...rootProps } = htmlProps as any\n\n  return (\n    <TabsDescendantsProvider value={descendants}>\n      <TabsProvider value={context}>\n        <TabsStylesProvider value={styles}>\n          <chakra.div\n            className={cx(\"chakra-tabs\", className)}\n            ref={ref}\n            {...rootProps}\n            __css={styles.root}\n          >\n            {children}\n          </chakra.div>\n        </TabsStylesProvider>\n      </TabsProvider>\n    </TabsDescendantsProvider>\n  )\n})\n\nTabs.displayName = \"Tabs\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}