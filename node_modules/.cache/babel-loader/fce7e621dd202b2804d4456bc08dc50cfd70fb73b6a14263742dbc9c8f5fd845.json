{"ast":null,"code":"'use client';\n\n// src/use-button-type.tsx\nimport _slicedToArray from \"D:/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  var _useState = useState(!value),\n    _useState2 = _slicedToArray(_useState, 2),\n    isButton = _useState2[0],\n    setIsButton = _useState2[1];\n  var refCallback = useCallback(function (node) {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  var type = isButton ? \"button\" : void 0;\n  return {\n    ref: refCallback,\n    type: type\n  };\n}\nexport { useButtonType };","map":{"version":3,"mappings":";;;;AAAA,SAASA,aAAaC,gBAAgB;AAE/B,SAASC,cAAcC,OAA2B;EACvD,gBAAgCF,SAAS,CAACE,KAAK;IAAA;IAAxCC;IAAUC,WAAW;EAC5B,IAAMC,cAAcN,YAAY,UAACO,MAA6B;IAC5D,IAAI,CAACA,MAAM;IACXF,YAAYE,KAAKC,YAAY,QAAQ;EACvC,GAAG,EAAE;EACL,IAAMC,OAAOL,WAAW,WAAW;EACnC,OAAO;IAAEM,KAAKJ;IAAaG;EAAK;AAClC","names":["useCallback","useState","useButtonType","value","isButton","setIsButton","refCallback","node","tagName","type","ref"],"sources":["D:\\portfolio\\node_modules\\@chakra-ui\\button\\src\\use-button-type.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\"\n\nexport function useButtonType(value?: React.ElementType) {\n  const [isButton, setIsButton] = useState(!value)\n  const refCallback = useCallback((node: HTMLElement | null) => {\n    if (!node) return\n    setIsButton(node.tagName === \"BUTTON\")\n  }, [])\n  const type = isButton ? \"button\" : undefined\n  return { ref: refCallback, type } as const\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}