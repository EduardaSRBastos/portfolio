{"ast":null,"code":"'use client';\n\n// src/button-spinner.tsx\nimport _defineProperty from \"D:/portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"D:/portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"D:/portfolio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"label\", \"placement\", \"spacing\", \"children\", \"className\", \"__css\"];\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  var label = props.label,\n    placement = props.placement,\n    _props$spacing = props.spacing,\n    spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n    _props$children = props.children,\n    children = _props$children === void 0 ? /* @__PURE__ */jsx(Spinner, {\n      color: \"currentColor\",\n      width: \"1em\",\n      height: \"1em\"\n    }) : _props$children,\n    className = props.className,\n    __css = props.__css,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _className = cx(\"chakra-button__spinner\", className);\n  var marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  var spinnerStyles = useMemo(function () {\n    var _objectSpread2;\n    return _objectSpread((_objectSpread2 = {\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\"\n    }, _defineProperty(_objectSpread2, marginProp, label ? spacing : 0), _defineProperty(_objectSpread2, \"fontSize\", \"1em\"), _defineProperty(_objectSpread2, \"lineHeight\", \"normal\"), _objectSpread2), __css);\n  }, [__css, label, marginProp, spacing]);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n    className: _className\n  }, rest), {}, {\n    __css: spinnerStyles,\n    children: children\n  }));\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\nexport { ButtonSpinner };","map":{"version":3,"mappings":";;;;;;;AAAA,SAASA,eAAe;AACxB,SAASC,cAAkD;AAC3D,SAASC,UAAU;AACnB,SAASC,eAAe;AAYT;AALR,SAASC,cAAcC,OAA2B;EACvD,IACEC,QAOED,MAPFC;IACAC,YAMEF,MANFE;IAAA,iBAMEF,MALFG;IAAAA,sCAAU;IAAA,kBAKRH,MAJFI;IAAAA,wCAAW,mBAACT;MAAQU,OAAM;MAAeC,OAAM;MAAMC,QAAO;IAAA,CAAM;IAClEC,YAGER,MAHFQ;IACAC,QAEET,MAFFS;IACGC,gCACDV;EAEJ,IAAMW,aAAad,GAAG,0BAA0BW,SAAS;EAEzD,IAAMI,aAAaV,cAAc,UAAU,cAAc;EAEzD,IAAMW,gBAAmCf,QACvC;IAAA;IAAA;MACEgB,SAAS;MACTC,YAAY;MACZC,UAAUf,QAAQ,aAAa;IAAA,mCAC9BW,UAAU,EAAGX,QAAQE,UAAU,gDACtB,sDACE,4BACTM;EAAA,CACL,EACA,CAACA,OAAOR,OAAOW,YAAYT,OAAO,EACpC;EAEA,OACE,mBAACP,OAAOqB;IAAIT,WAAWG;EAAA,GAAgBD;IAAMD,OAAOI;IACjDT;EAAA,GACH;AAEJ;AACAL,cAAcmB,cAAc","names":["Spinner","chakra","cx","useMemo","ButtonSpinner","props","label","placement","spacing","children","color","width","height","className","__css","rest","_className","marginProp","spinnerStyles","display","alignItems","position","div","displayName"],"sources":["D:\\portfolio\\node_modules\\@chakra-ui\\button\\src\\button-spinner.tsx"],"sourcesContent":["import { Spinner } from \"@chakra-ui/spinner\"\nimport { chakra, HTMLChakraProps, SystemStyleObject } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport { ButtonSpinnerOptions } from \"./button-types\"\n\ninterface ButtonSpinnerProps\n  extends HTMLChakraProps<\"div\">,\n    ButtonSpinnerOptions {}\n\nexport function ButtonSpinner(props: ButtonSpinnerProps) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = <Spinner color=\"currentColor\" width=\"1em\" height=\"1em\" />,\n    className,\n    __css,\n    ...rest\n  } = props\n\n  const _className = cx(\"chakra-button__spinner\", className)\n\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\"\n\n  const spinnerStyles: SystemStyleObject = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css,\n    }),\n    [__css, label, marginProp, spacing],\n  )\n\n  return (\n    <chakra.div className={_className} {...rest} __css={spinnerStyles}>\n      {children}\n    </chakra.div>\n  )\n}\nButtonSpinner.displayName = \"ButtonSpinner\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}