{"ast":null,"code":"var _jsxFileName = \"D:\\\\portfolio\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport { ChakraProvider } from '@chakra-ui/react';\nimport Layout from \"./components/Layout\";\nimport { useEffect, useState } from \"react\";\nimport LoadingScreen from \"./components/LoadingScreen/LoadingScreen\";\nimport NotFound from \"./pages/NotFound/NotFound\";\nimport Art from \"./pages/Art/Art\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Check if the \"LoadingPage\" key exists in localStorage and its value is \"false\"\n    const loadingPageValue = localStorage.getItem(\"LoadingPage\");\n    if (loadingPageValue === \"false\") {\n      setIsLoading(true);\n    } else {\n      // If not found in localStorage or the value is not \"false\", show the loading screen\n      const startTimer = setTimeout(() => {\n        setIsLoading(true);\n        localStorage.setItem(\"LoadingPage\", \"false\");\n      }, 2500);\n      return () => clearTimeout(startTimer);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/art\",\n        element: /*#__PURE__*/_jsxDEV(Art, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/404\",\n        element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: \"/404\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","Navigate","ChakraProvider","Layout","useEffect","useState","LoadingScreen","NotFound","Art","jsxDEV","_jsxDEV","App","_s","isLoading","setIsLoading","loadingPageValue","localStorage","getItem","startTimer","setTimeout","setItem","clearTimeout","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","replace","to","_c","$RefreshReg$"],"sources":["D:/portfolio/src/App.tsx"],"sourcesContent":["import { Route, Routes, Navigate } from \"react-router-dom\";\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport Layout from \"./components/Layout\";\r\nimport { useEffect, useState } from \"react\";\r\nimport LoadingScreen from \"./components/LoadingScreen/LoadingScreen\";\r\nimport NotFound from \"./pages/NotFound/NotFound\";\r\nimport Art from \"./pages/Art/Art\";\r\n\r\nconst App = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if the \"LoadingPage\" key exists in localStorage and its value is \"false\"\r\n    const loadingPageValue = localStorage.getItem(\"LoadingPage\");\r\n    if (loadingPageValue === \"false\") {\r\n      setIsLoading(true);\r\n    } else {\r\n      // If not found in localStorage or the value is not \"false\", show the loading screen\r\n      const startTimer = setTimeout(() => {\r\n        setIsLoading(true);\r\n        localStorage.setItem(\"LoadingPage\", \"false\");\r\n      }, 2500);\r\n      return () => clearTimeout(startTimer);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ChakraProvider>\r\n      {!isLoading ? (\r\n        <Routes>\r\n          <Route path=\"/\" element={<Layout />} />\r\n          <Route path=\"/art\" element={<Art />} />\r\n          <Route path=\"/404\" element={<NotFound />} />\r\n          <Route path=\"*\" element={<Navigate replace to=\"/404\" />} />\r\n        </Routes>\r\n      ) : (\r\n        <LoadingScreen />\r\n      )}\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AAC1D,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAC5D,IAAIF,gBAAgB,KAAK,OAAO,EAAE;MAChCD,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACL;MACA,MAAMI,UAAU,GAAGC,UAAU,CAAC,MAAM;QAClCL,YAAY,CAAC,IAAI,CAAC;QAClBE,YAAY,CAACI,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC;MAC9C,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMC,YAAY,CAACH,UAAU,CAAC;IACvC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA,CAACR,cAAc;IAAAoB,QAAA,EACZ,CAACT,SAAS,gBACTH,OAAA,CAACV,MAAM;MAAAsB,QAAA,gBACLZ,OAAA,CAACX,KAAK;QAACwB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEd,OAAA,CAACP,MAAM;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvClB,OAAA,CAACX,KAAK;QAACwB,IAAI,EAAC,MAAM;QAACC,OAAO,eAAEd,OAAA,CAACF,GAAG;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvClB,OAAA,CAACX,KAAK;QAACwB,IAAI,EAAC,MAAM;QAACC,OAAO,eAAEd,OAAA,CAACH,QAAQ;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5ClB,OAAA,CAACX,KAAK;QAACwB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEd,OAAA,CAACT,QAAQ;UAAC4B,OAAO;UAACC,EAAE,EAAC;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,gBAETlB,OAAA,CAACJ,aAAa;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAErB,CAAC;AAAChB,EAAA,CAhCID,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}